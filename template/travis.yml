language: cpp
sudo: required

git:
  depth: false

env:
  global:
    - CMAKE_VER=3.13.2
    - TESTS=true
    #- DOCS=true
    - DOCS=false
    - CLANG_CHECKS=false
    - CODECOV=false
    - CMAKE_OPTS=""

matrix:
  include:
    - os: linux
      dist: xenial
      env: _CC=gcc CC_VER=7
    - os: linux
      dist: xenial
      env: _CC=gcc CC_VER=8
    - os: linux
      dist: xenial
      env: _CC=clang CC_VER=6.0.1
    - os: linux
      dist: xenial
      env: _CC=clang CC_VER=7.0.0
    - os: linux
      dist: xenial
      env: _CC=arm-none-eabi-gcc CC_VER=7 TESTS=false CMAKE_OPTS=-DCMAKE_TOOLCHAIN_FILE=../tools/cmake/arm-none-eabi-gcc.cmake
    - os: linux
      dist: xenial
      env: _CC=arm-none-eabi-gcc CC_VER=8 TESTS=false CMAKE_OPTS=-DCMAKE_TOOLCHAIN_FILE=../tools/cmake/arm-none-eabi-gcc.cmake
    - os: osx
      osx_image: xcode10
      env: _CC=gcc CC_VER=7
    - os: osx
      osx_image: xcode10
      env: _CC=gcc CC_VER=8
    - os: osx
      osx_image: xcode10
      env: _CC=clang CC_VER=6.0.1
    - os: osx
      osx_image: xcode10
      env: _CC=clang CC_VER=7.0.0 CLANG_CHECKS=true CODECOV=true
    - os: osx
      osx_image: xcode10
      env: _CC=arm-none-eabi-gcc CC_VER=7 TESTS=false CMAKE_OPTS=-DCMAKE_TOOLCHAIN_FILE=../tools/cmake/arm-none-eabi-gcc.cmake
    - os: osx
      osx_image: xcode10
      env: _CC=arm-none-eabi-gcc CC_VER=8 TESTS=false CMAKE_OPTS=-DCMAKE_TOOLCHAIN_FILE=../tools/cmake/arm-none-eabi-gcc.cmake

before_install:
  - export PATH=${TRAVIS_BUILD_DIR}/tools/ci:${PATH}
  - mkdir -p deps && cd $_

install:
  - install-${_CC}.sh ${CC_VER} ${TRAVIS_OS_NAME}
  - install-cmake.sh ${CMAKE_VER} ${TRAVIS_OS_NAME}
  - if [[ ${CLANG_CHECKS} == true ]]; then pip install pyyaml; fi
  - install-cppcheck.sh ${TRAVIS_OS_NAME}
  - install-doxygen.sh ${TRAVIS_OS_NAME}
  - if [[ ${CODECOV} == true ]]; then install-lcov.sh ${TRAVIS_OS_NAME}; fi

before_script:
  - export-paths.sh
  - source ${HOME}/.bash_profile

  - cmake --version
  - if [[ ${CLANG_CHECKS} == true ]]; then clang-format --version; fi
  - python --version
  - cppcheck --version
  - doxygen --version

  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build && cd $_

script:
  - cmake -DLIBALLOCATOR_TESTS=${TESTS} -DLIBALLOCATOR_DOCS=${DOCS} -DLIBALLOCATOR_COVERAGE=${CODECOV} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ${CMAKE_OPTS} ..
  - make
  - if [[ ${DOCS} == true ]]; then make doxygen; fi

  - |
    if [[ ${TESTS} == true ]]; then
      ctest -R UnitTests
      ctest -R PerformanceTests
    fi

  - |
    if [[ ${CODECOV} == true ]]; then
      make coverage
      bash <(curl -s https://codecov.io/bash)
    fi

  - cd -

  - |
    if [[ ${CLANG_CHECKS} == true ]]; then
      check-clang-format.sh .
      check-clang-tidy.sh build/
    fi
  - check-cppcheck.sh include/ src/ .config/cppcheck.warn
  - check-doxygen.sh build/docs/doxygen.warn .config/doxygen.warn
