function(utils_log MSG)
    message(STATUS "  ${MSG}")
endfunction()

macro(utils_getVersion VERSION)
    find_package(Git)
    execute_process(COMMAND ${GIT_EXECUTABLE} describe --abbrev=0 --tags OUTPUT_VARIABLE TAG_VERSION ERROR_VARIABLE TAG_VERSION)
    string(STRIP ${TAG_VERSION} TAG_VERSION)
    string(SUBSTRING ${TAG_VERSION} 1 -1 TAG_VERSION)

    if(${TAG_VERSION} MATCHES "^(fatal)")
        set(TAG_VERSION "0.1.0")
    endif()

    set(VERSION ${TAG_VERSION})
    endmacro()

function(utils_setOutputPath TARGET OUTPUT_PATH)
    set_target_properties(${TARGET} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_PATH})
    set_target_properties(${TARGET} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_PATH})
    set_target_properties(${TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_PATH})
    add_custom_target(${TARGET}_path ALL COMMAND ${CMAKE_COMMAND} -E make_directory ${OUTPUT_PATH})
endfunction()

function(utils_showBuildConfig)
    utils_log("Project configuration:")
    utils_log("  Build type  : ${CMAKE_BUILD_TYPE}")
    utils_log("  CC          : ${CMAKE_C_COMPILER}")
    utils_log("  CXX         : ${CMAKE_CXX_COMPILER}")
    utils_log("  ASM         : ${CMAKE_ASM_COMPILER}")
    utils_log("  RANLIB      : ${CMAKE_RANLIB}")
    utils_log("  AR          : ${CMAKE_AR}")
    utils_log("  CFLAGS      : ${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_DEBUG}")
    utils_log("  CXXFLAGS    : ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG}")
    utils_log("  LDFLAGS C   : ${CMAKE_C_LINK_FLAGS}")
    utils_log("  LDFLAGS CXX : ${CMAKE_CXX_LINK_FLAGS}")

    utils_log("Artifact output paths:")
    utils_log("  Archive     : ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}")
    utils_log("  Library     : ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
    utils_log("  Executable  : ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
endfunction()
